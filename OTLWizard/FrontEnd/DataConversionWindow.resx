<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAA/1JREFUWEe9V0lPFEEYnV+k4kXjwQMuLIqjICogyjbDgGBccQXFCS6JEk8Goqhx
        Cy4HRFAWgWgiggcXDhpA5WIiBpiFEVAYfdYrpqWnp2S6R+NLXhi6q773ur+vvqq2wQJ6+77jZtMEqmr9
        2HXai8LjHkn+5jXe4xgriGogGPyJ89fGkVQ4gsyyMeQd9cBxzANXpQdFJ7yS/M1rvMcxHMs5nBsN8xqo
        uR1AonME+eVzYmbJOZzLGPNBaWAmCPkk2w5ZFzaSMRgrKGKqEGHAF/iBNUUjMreqgLGQsRiTsY0IM0CX
        HOiqVAf6GzImYxvfRJiBzP2jlp6cxZd7xPx4xqaGHr8N1NwJWMq5o8KDjH1jaOyaRNYBv3KMitSglgZp
        IPjjp6xY1QQVsw8Ko26PDEDscb+Eyz2lHKsitahJSANcs2aWWrHbiw2lo6i+Oi4naygp70ZKXitKqibF
        OF/EPCOpRU1CGmDjUA3U0yVI5891ne5Ww0f513ngGVZltWB11gPkHh4TdeFFjqgNjQUVkfGoSdjYOrlO
        jQP0ZJfjk2vLyOP7jgUJ93Hh+jv5/72HQ6i92Y9L9f2ovf4Gd1qmUP9oQvJe2yTOXBwWJgJhMalJbRv7
        N1uo/qaexnw/7R2W4mty2lFXPxC6Gh2LEhqw8/S333GpSW1bVe24fEK9KKnl+5wu38erX2OJvQnpRV3Y
        6OpCfEYLdhzthqPsWSRFWtILuzA4NDt/UVID0pxtoTqZfavUtnEn028sUlwwUeSo+9VcvjcJwYStbVJY
        z/UFHWo6OrAstRlvB3xy/uKkRjG+ExsKWlFcNSE0fXIXtakaT9ruUXydnF0m/R/8WLquGXYR1CgejcvT
        H+Ld4JwBvrm0wk6sz3+EHe6ANPHfDfA6TdjzmoWW//+mQDNApgoTmaUdZorQLwMQEUW4xXwRGg3Q5F73
        CxPLUPRul0iThqc9w1gYWoaXLSzDuKT7YQbW5j5GzY1+843IXjq3n/+5EQ1E8MrdQVScfSkFNXFyZWYr
        nvR8Nt+KyflbcSuSt7crmZIXLk4uTGiUc//JZrSzogf2fPOrZJ0wdKz6lZwb83bs0rXnXZW9ppdpuuAC
        0ZZnQidmaYCI6UBS5hVpGET85malmIqJ2W04c6EvpKozQFg/krFAJ0R1P0Gqs10pqGeqsxMrxP6hR5iB
        WA6lbGKlp6axpaRH9nmVsKToCXHJjeLVh5+MwwwQsRzLZ018Q/buPlGMkengk1Ocy9eICAME34TVDxOa
        KDk5hZyD70Wfb5LCLDjmnK/d+OQalAY0WP00kybEVuso/4Tk7AeyWekLToV5DRDWP05HkVzsxdm6L5ie
        nglF+TOiGtDj33+eA78A4GVUPMncWdwAAAAASUVORK5CYII=
</value>
  </data>
</root>